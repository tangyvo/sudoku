{"version":3,"sources":["component/Block.jsx","component/Game.jsx","component/Timer.jsx","component/Menu.jsx","component/Won.jsx","component/Combinations.jsx","component/NewGame.jsx","App.js","index.js"],"names":["React","memo","userInput","num","original","index","isPlaying","focus","handleFocus","noteModeOn","noteArr","highlightNum","helpMode","id","className","includes","length","maxLength","type","value","onChange","e","onClick","map","val","key","Math","random","grid","originalGrid","i","Timer","timer","showModal","handleSubmit","handleDifficulty","isFullGrid","error","undo","gridHistory","handleNoteMode","toggleHelpMode","isBrowser","disabled","Won","hasWon","startGame","showWonModal","hideModal","Winners","NewGame","showNewGameModal","useState","Array","fill","setOrginalGrid","setGridHistory","setGrid","difficulty","setDifficulty","setIsPlaying","setTimer","setIsFullGrid","setError","setFocus","setHasWon","setNoteModeOn","setShowWonModal","setShowNewGameModal","setHighlightNum","setHelpMode","arr","setNoteArr","document","querySelector","blur","getNewPuzzle","api","fetch","then","response","json","data","board","join","split","useEffect","emptyBlock","filter","block","seconds","timeRef","setInterval","formatTime","clearInterval","mins","sec","floor","time","verifyNum","enteredNum","combinations","push","duplicates","prevFocusRef","useRef","current","window","addEventListener","handleKeypress","removeEventListener","keyCode","handleSetFocus","handleNote","input","toString","noteArrayCopy","replace","focusCopy","focusElem","getElementById","classList","contains","Number","target","gridCopy","gridHistoryCopy","noMatch","combination","sort","lastStep","updateGridHistory","splice","won","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b4d72e10.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Block = ({\n  userInput,\n  num,\n  original,\n  index,\n  isPlaying,\n  focus,\n  handleFocus,\n  noteModeOn,\n  noteArr,\n  highlightNum,\n  helpMode\n}) => {\n  return (\n    <>\n      {original !== \"0\" ? (\n        <div\n          id={index}\n          className={\n            highlightNum.includes(index) && helpMode\n              ? \"original highlight\"\n              : index === focus\n              ? \"na-focus original\"\n              : \"original\"\n          }\n        >\n          {original}\n        </div>\n      ) : (num === \"0\" || num === \"\") &&\n        (noteArr[1].length > 0 || noteModeOn) ? (\n        <div\n          id={index}\n          onClick={() => handleFocus(index)}\n          className={\n            focus === index && noteModeOn\n              ? \"note-mode notes\"\n              : focus === index\n              ? \"notes na-focus\"\n              : \"notes\"\n          }\n        >\n          {noteArr[1].map((val) => (\n            <div key={Math.random()} className={`note note${val} show`}>\n              {val}\n            </div>\n          ))}\n        </div>\n      ) : !isPlaying ? (\n        <div className=\"block\" id={index}></div>\n      ) : (\n        <input\n          id={index}\n          maxLength=\"1\"\n          type=\"textbox\"\n          className={\n            highlightNum.includes(index) && helpMode\n              ? \"block highlight\"\n              : index === focus\n              ? \"block focus\"\n              : \"block\"\n          }\n          value={num === \"0\" ? \"\" : num}\n          onChange={(e) => userInput(e, index)}\n          onClick={() => handleFocus(index)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default React.memo(Block);","import React from \"react\";\nimport Block from \"./Block\";\n\nconst Game = ({ grid, originalGrid, userInput, isPlaying, focus, handleFocus, noteModeOn, noteArr, highlightNum, helpMode }) => {\n  return (\n    <div className=\"grid\">\n      {grid.map((num, i) => (\n        <Block\n          key={i}\n          num={num}\n          original={originalGrid[i]}\n          index={i}\n          userInput={userInput}\n          isPlaying={isPlaying}\n          focus={focus}\n          handleFocus={handleFocus}\n          noteModeOn={noteModeOn}\n          noteArr={noteArr[i]}\n          highlightNum={highlightNum}\n          helpMode={helpMode}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(Game);","import React from 'react';\n\nconst Timer = ({timer}) => {\n    return (<div className=\"timer\">{timer}</div>)\n}\n\nexport default Timer;","import React from \"react\";\nimport { isBrowser } from \"react-device-detect\";\nimport Timer from './Timer';\n\nconst Menu = ({\n  showModal,\n  handleSubmit,\n  handleDifficulty,\n  timer,\n  isFullGrid,\n  error,\n  undo,\n  isPlaying,\n  gridHistory,\n  noteModeOn,\n  handleNoteMode,\n  toggleHelpMode\n}) => {\n  return (\n    <nav className=\"menu\">\n      <h1 className=\"title\">Sudoku</h1>\n      <p className=\"subtitle\">Timer:</p>\n      <Timer timer={timer} />\n      <p className=\"subtitle\">Difficulty:</p>\n      <select className=\"diffculty\" onChange={handleDifficulty}>\n        <option value=\"easy\">Easy</option>\n        <option value=\"medium\">Medium</option>\n        <option value=\"hard\">Hard</option>\n      </select>\n      <button className=\"btn btn-start active\" onClick={showModal}>\n        New Game\n      </button>\n      <label className=\"help-label\"> Help Mode:\n      <input type=\"checkbox\" className='help-checkbox' onChange={toggleHelpMode}/>\n      </label>\n\n      <div className=\"btn-small\">\n        <button\n          className={\n            isPlaying && gridHistory.length > 1\n              ? \"btn btn-undo active\"\n              : \"btn btn-undo\"\n          }\n          onClick={undo}\n        >\n          Undo\n        </button>\n\n        <button\n          className={\n            noteModeOn && isPlaying\n              ? \"btn btn-notes\"\n              : isPlaying\n              ? \"btn active\"\n              : \"btn\"\n          }\n          onClick={handleNoteMode}\n        >\n          {noteModeOn ? \"Note: ON\" : \"Note: OFF\"}\n        </button>\n      </div>\n\n        <p className=\"note-message\">\n        <strong>IN NOTE MODE:</strong> {isBrowser ? 'type numbers 1-9 to add and remove from cell.' : 'Note mode is not available on mobile.'}\n        </p>\n\n      <button\n        className={isFullGrid ? \"btn btn-submit active\" : \"btn btn-submit\"}\n        disabled={isFullGrid ? false : true}\n        onClick={handleSubmit}\n      >\n        Submit\n      </button>\n      <p className={error ? \"error show\" : \"error\"}>Oops! Try again</p>\n    </nav>\n  );\n};\n\nexport default React.memo(Menu);","import React from \"react\";\n\nconst Won = ({ hasWon, startGame, showWonModal, hideModal }) => {\n  return (\n    <div className={showWonModal ? \"show modal\" : \"modal\"}>\n      <div className=\"modal-content\">\n        <p>You've Won!</p>\n        <button className=\"btn btn-newgame\" onClick={startGame}>\n          Play Again\n        </button>\n        <button className=\"modal-close\" onClick={hideModal}>\n          x\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Won;","export const Winners = [\n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n  [9, 10, 11, 12, 13, 14, 15, 16, 17],\n  [18, 19, 20, 21, 22, 23, 24, 25, 26],\n  [27, 28, 29, 30, 31, 32, 33, 34, 35],\n  [36, 37, 38, 39, 40, 41, 42, 43, 44],\n  [45, 46, 47, 48, 49, 50, 51, 52, 53],\n  [54, 55, 56, 57, 58, 59, 60, 61, 62],\n  [63, 64, 65, 66, 67, 68, 69, 70, 71],\n  [72, 73, 74, 75, 76, 77, 78, 79, 80],\n  [0, 9, 18, 27, 36, 45, 54, 63, 72],\n  [1, 10, 19, 28, 37, 46, 55, 64, 73],\n  [2, 11, 20, 29, 38, 47, 56, 65, 74],\n  [3, 12, 21, 30, 39, 48, 57, 66, 75],\n  [4, 13, 22, 31, 40, 49, 58, 67, 76],\n  [5, 14, 23, 32, 41, 50, 59, 68, 77],\n  [6, 15, 24, 33, 42, 51, 60, 69, 78],\n  [7, 16, 25, 34, 43, 52, 61, 70, 79],\n  [8, 17, 26, 35, 44, 53, 62, 71, 80],\n  [0, 1, 2, 9, 10, 11, 18, 19, 20],\n  [3, 4, 5, 12, 13, 14, 21, 22, 23],\n  [6, 7, 8, 15, 16, 17, 24, 25, 26],\n  [27, 28, 29, 36, 37, 38, 45, 46, 47],\n  [30, 31, 32, 39, 40, 41, 48, 49, 50],\n  [33, 34, 35, 42, 43, 44, 51, 52, 53],\n  [54, 55, 56, 63, 64, 65, 72, 73, 74],\n  [57, 58, 59, 66, 67, 68, 75, 76, 77],\n  [60, 61, 62, 69, 70, 71, 78, 79, 80]\n];\n","import React from \"react\";\n\nconst NewGame = ({ startGame, showNewGameModal, hideModal}) => {\n  return (\n    <div className={showNewGameModal ? \"modal show\" : \"modal\"}>\n      <div className=\"modal-content\">\n        <h3 className=\"modal-title\">HOW TO PLAY SUDOKU</h3>\n        <ul>\n          <li>\n            Fill in the numbers 1-9 exactly once in every row, column and 3x3\n            block\n          </li>\n          <br />\n          <h3 className=\"modal-title\">Keyboard Controls:</h3>\n          <li>Press the spacebar key to toggle note mode on and off</li>\n          <li>Use up, down, left & right arrow keys to navigate to a block</li>\n        </ul>\n        <button className=\"btn btn-newgame\" onClick={startGame}>\n          Start\n        </button>\n        <button className=\"modal-close\" onClick={hideModal}>\n          x\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewGame;","import React, { useState, useEffect, useRef } from \"react\";\nimport Game from \"./component/Game\";\nimport Menu from \"./component/Menu\";\nimport Won from \"./component/Won\";\nimport { Winners } from \"./component/Combinations\";\nimport NewGame from \"./component/NewGame\";\n\nconst App = () => {\n  const [originalGrid, setOrginalGrid] = useState(Array(81).fill(\"0\"));\n  const [gridHistory, setGridHistory] = useState([]);\n  const [grid, setGrid] = useState(Array(81).fill(\"\"));\n  const [difficulty, setDifficulty] = useState(\"easy\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timer, setTimer] = useState(\"00:00\");\n  const [isFullGrid, setIsFullGrid] = useState(false);\n  const [error, setError] = useState(false);\n  const [focus, setFocus] = useState(null);\n  const [hasWon, setHasWon] = useState(false);\n  const [noteModeOn, setNoteModeOn] = useState(false);\n  const [showWonModal, setShowWonModal] = useState(false);\n  const [showNewGameModal, setShowNewGameModal] = useState(false);\n  const [highlightNum, setHighlightNum] = useState([]);\n  const [helpMode, setHelpMode] = useState(false);\n  const [noteArr, setNoteArr] = useState(\n    Array(81)\n      .fill([])\n      .map((arr, i) => [i, []])\n  );\n\n  // RESET GRID & STARTING STATES\n  const startGame = () => {\n    setShowNewGameModal(false);\n    setShowWonModal(false);\n    document.querySelector(\".btn-start\").blur();\n    setIsPlaying(false);\n    setHasWon(false);\n    setNoteModeOn(false);\n    setFocus(null);\n    setNoteArr(\n      Array(81)\n        .fill([])\n        .map((arr, i) => [i, []])\n    );\n    getNewPuzzle();\n    setIsFullGrid(false);\n  };\n\n  // API CALL TO FETCH NEW SUDOKU PUZZLE\n  const getNewPuzzle = () => {\n    const api = `https://sugoku.herokuapp.com/board?difficulty=${difficulty}`;\n    fetch(api)\n      .then((response) => response.json())\n      .then((data) => {\n        let grid = data.board.join(\",\").split(\",\");\n        setGrid(grid);\n        setOrginalGrid(grid);\n        setGridHistory([grid]);\n        setIsPlaying(true);\n      });\n  };\n\n  // CHECK IF PUZZLE IS COMPLETE\n  useEffect(() => {\n    let emptyBlock = grid.filter((block) => block === \"0\" || block === \"\")\n      .length;\n    if (emptyBlock === 0 && isPlaying) {\n      setIsFullGrid(true);\n    } else {\n      setIsFullGrid(false);\n    }\n  }, [grid]);\n\n  // CHECK IF PLAYER HAS WON\n  const handleSumbit = () => {\n    let noMatch = false;\n    for (let arr of Winners) {\n      let combination = [];\n      for (let i = 0; i < 9; i++) {\n        combination.push(grid[arr[i]]);\n      }\n      combination = combination.sort().join(\"\");\n      if (combination !== \"123456789\") {\n        noMatch = true;\n        setError(true);\n      }\n    }\n\n    // IF WON - FREEZE TIMER AND SET WIN STATE\n    if (!noMatch) {\n      setError(false);\n      setHasWon(true);\n      setShowWonModal(true);\n      let endTime = timer;\n      setTimer(endTime);\n    }\n  };\n\n  // START TIMER WHEN GAME STARTS AND RESET WHEN PLAYER HAS WON\n  useEffect(() => {\n    if (!isPlaying) return;\n\n    if (hasWon) {\n      let endTime = timer;\n      setTimer(endTime);\n      return;\n    }\n\n    let seconds = 0;\n    const timeRef = setInterval(() => {\n      seconds += 1;\n      formatTime(seconds);\n    }, 1000);\n\n    return () => {\n      clearInterval(timeRef);\n    };\n  }, [isPlaying, hasWon]);\n\n  // FORMAT TIME TO 00:00\n  const formatTime = (seconds) => {\n    let mins;\n    let sec = 0;\n    if (seconds >= 60) {\n      mins = Math.floor(seconds / 60);\n      sec = seconds % 60;\n      mins = mins === 0 ? \"00\" : mins <= 9 ? `0${mins}` : mins;\n    } else {\n      sec = seconds;\n      mins = \"00\";\n    }\n    sec = sec === 0 ? \"00\" : sec <= 9 ? `0${sec}` : sec;\n    let time = `${mins}:${sec}`;\n    setTimer(time);\n  };\n\n  // ADD NUMBER INPUT TO GRID\n  const userInput = (e, index) => {\n    const input = Number(e.target.value);\n    let gridCopy = [...grid];\n    if (input >= 1 || input <= 9) {\n      gridCopy[index] = e.target.value;\n      setGrid(gridCopy);\n      let gridHistoryCopy = gridHistory;\n      gridHistoryCopy.push(gridCopy);\n      setGridHistory(gridHistoryCopy);\n    }\n    if (helpMode) {\n      verifyNum(e.target.value);\n    }\n    return e.target.value;\n  };\n\n  // CHECK IF NUMBER IS ALREADY IN ROW, COL & LOCAL BLOCK\n  const verifyNum = (enteredNum) => {\n    let combinations = [];\n    for (let arr of Winners) {\n      if (arr.includes(focus)) {\n        combinations.push(arr);\n      } \n    }\n\n    const duplicates = [];\n    for (let arr of combinations) {\n      for (let i = 0; i < 9; i++) {\n        if (\n          (grid[arr[i]] === enteredNum) &&\n          !duplicates.includes(arr[i])\n        ) {\n          duplicates.push(arr[i]);\n        }\n      }\n    }\n    setHighlightNum(duplicates);\n  }\n\n  // RE-CHECK VERIFYNUM FUNC WHEN TURNING ON HELP MODE\n  useEffect(() => {\n    verifyNum(grid[focus]);\n  }, [helpMode]);\n\n  // STORE PREV FOCUS INDEX AS REF SO FOCUS CAN BE REMOVED LATER\n  const prevFocusRef = useRef();\n\n  useEffect(() => {\n    prevFocusRef.current = focus;\n  });\n\n  // EVENT LISTENER FOR KEY PRESS\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeypress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeypress);\n    };\n  });\n\n  // CHECKS KEY IS PRESSED AND CALLS REVEVANT FUNCTION\n  const handleKeypress = (e) => {\n    // UP, DOWN, LEFT AND RIGHT ARROW KEYS\n    if (e.keyCode >= 37 && e.keyCode <= 40) {\n      handleSetFocus(e.keyCode);\n    }\n    // SPACEBAR KEY (TOGGLE NOTE MODE ON/OFF)\n    else if (isPlaying && e.keyCode === 32) {\n      setNoteModeOn(!noteModeOn);\n    }\n    // 1-9 NUBMER KEYS\n    else if (e.keyCode >= 49 && e.keyCode <= 57 && focus >= 0 && noteModeOn) {\n      handleNote(e.keyCode);\n    } else {\n      return;\n    }\n  };\n\n  // ADDS AND REMOVE NUMBER FROM NOTES ARRAY FOR THE FOCUSED BLOCK\n  const handleNote = (key) => {\n    let input = (key - 48).toString();\n    let noteArrayCopy = noteArr;\n\n    if (noteArrayCopy[focus][1].includes(input)) {\n      noteArrayCopy[focus][1] = noteArrayCopy[focus][1]\n        .join(\"\")\n        .replace(input, \"\")\n        .split(\"\");\n    } else {\n      noteArrayCopy[focus][1].push(input);\n    }\n\n    setNoteArr(noteArrayCopy);\n  };\n\n  // UPDATE FOCUS STATE WHEN UP, DOWN, LEFT AND ARROW KEYS ARE PRESSED\n  const handleSetFocus = (key) => {\n    let focusCopy = focus;\n    if (key === 39) {\n      focusCopy += 1;\n    } else if (key === 40) {\n      focusCopy += 9;\n    } else if (key === 37) {\n      focusCopy -= 1;\n    } else if (key === 38) {\n      focusCopy -= 9;\n    }\n\n    if (focusCopy > 80 || focusCopy < 0) return;\n    setFocus(focusCopy);\n\n    let focusElem = document.getElementById(focusCopy);\n\n    if (\n      focusElem.classList.contains(\"block\") ||\n      focusElem.classList.contains(\"note\")\n    ) {\n      focusElem.focus();\n    } else {\n      document.getElementById(prevFocusRef.current).blur();\n    }\n  };\n\n  // REFOCUS CURSOR ON CURRENT INPUT BLOCK AFTER SWITCHING OFF NOTE MODE\n  useEffect(() => {\n    if (noteModeOn || !focus) return;\n    let focusCopy = focus;\n    let focusElem = document.getElementById(focusCopy);\n    setFocus(focusCopy);\n\n    if (focusElem.classList.contains(\"block\")) {\n      focusElem.focus();\n    } else {\n      document.getElementById(prevFocusRef.current).blur();\n    }\n  }, [noteModeOn]);\n\n  // UNDO - REVERT GRID TO LAST STATE\n  const handleUndo = () => {\n    let lastStep = gridHistory.length - 2;\n    if (lastStep < 0) return;\n    setGrid(gridHistory[lastStep]);\n    let updateGridHistory = gridHistory.splice(0, gridHistory.length - 1);\n    setGridHistory(updateGridHistory);\n  };\n\n  return (\n    <>\n      <div className=\"app\">\n        <Game\n          grid={grid}\n          originalGrid={originalGrid}\n          userInput={userInput}\n          focus={focus}\n          handleFocus={(index) => setFocus(index)}\n          isPlaying={isPlaying}\n          noteModeOn={noteModeOn}\n          noteArr={noteArr}\n          highlightNum={highlightNum}\n          helpMode={helpMode}\n        />\n        <Menu\n          showModal={() => setShowNewGameModal(true)}\n          handleDifficulty={(e) => setDifficulty(e.target.value)}\n          timer={timer}\n          isFullGrid={isFullGrid}\n          handleSubmit={handleSumbit}\n          error={error}\n          undo={handleUndo}\n          isPlaying={isPlaying}\n          handleNoteMode={() => setNoteModeOn(!noteModeOn)}\n          noteModeOn={noteModeOn}\n          gridHistory={gridHistory}\n          toggleHelpMode={() => setHelpMode(!helpMode)}\n        />\n      </div>\n      <Won\n        won={hasWon}\n        showWonModal={showWonModal}\n        startGame={startGame}\n        hideModal={() => setShowWonModal(false)}\n      />\n      <NewGame\n        startGame={startGame}\n        hideModal={() => setShowNewGameModal(false)}\n        showNewGameModal={showNewGameModal}\n      />\n    </>\n  );\n};\n\nexport default React.memo(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}