{"version":3,"sources":["component/Block.jsx","component/Game.jsx","component/Timer.jsx","component/Menu.jsx","component/Won.jsx","component/Combinations.jsx","component/NewGame.jsx","App.js","index.js"],"names":["React","memo","userInput","num","original","index","focus","handleFocus","noteModeOn","noteArr","highlightNum","helpMode","grid","id","className","includes","length","filter","block","maxLength","type","value","onChange","e","onClick","map","val","key","Math","random","originalGrid","i","Timer","timer","showModal","handleSubmit","handleDifficulty","isFullGrid","error","undo","isPlaying","gridHistory","handleNoteMode","toggleHelpMode","isBrowser","disabled","Won","startGame","showWonModal","hideModal","Winners","NewGame","showNewGameModal","useState","Array","fill","setOrginalGrid","setGridHistory","setGrid","difficulty","setDifficulty","setIsPlaying","setTimer","setIsFullGrid","setError","setFocus","setNoteModeOn","setShowWonModal","setShowNewGameModal","setHighlightNum","setHelpMode","arr","setNoteArr","prevFocusRef","useRef","timerRef","useEffect","current","document","querySelector","blur","getNewPuzzle","api","fetch","then","response","json","data","board","join","split","emptyBlock","clearInterval","seconds","setInterval","formatTime","mins","sec","floor","time","verifyNum","enteredNum","combinations","push","duplicates","window","addEventListener","handleKeypress","removeEventListener","keyCode","handleSetFocus","handleNote","clearNotes","noteArrayCopy","input","toString","replace","focusCopy","focusElem","getElementById","classList","contains","Number","target","gridCopy","gridHistoryCopy","noMatch","combination","sort","lastStep","updateGridHistory","splice","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2317f108.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Block = ({\n  userInput,\n  num,\n  original,\n  index,\n  focus,\n  handleFocus,\n  noteModeOn,\n  noteArr,\n  highlightNum,\n  helpMode,\n  grid\n}) => {\n  return (\n    <>\n      {original !== \"0\" ? (\n        <div\n          id={index}\n          className={\n            highlightNum.includes(index) && helpMode\n              ? \"original highlight\"\n              : index === focus\n              ? \"na-focus original\"\n              : \"original\"\n          }\n        >\n          {original}\n        </div>\n      ) : (num === \"0\" || num === \"\") &&\n        (noteArr[1].length > 0 || noteModeOn) ? (\n        <div\n          id={index}\n          onClick={() => handleFocus(index)}\n          className={\n            focus === index && noteModeOn\n              ? \"note-mode notes\"\n              : focus === index\n              ? \"notes na-focus\"\n              : \"notes\"\n          }\n        >\n          {noteArr[1].map((val) => (\n            <div key={Math.random()} className={`note note${val} show`}>\n              {val}\n            </div>\n          ))}\n        </div>\n          ) : (grid.filter(block => block === '0' || block === '').length === 81) ? (\n        <div className=\"block\" id={index}></div>\n      ) : (\n        <input\n          id={index}\n          maxLength=\"1\"\n          type=\"textbox\"\n          className={\n            highlightNum.includes(index) && helpMode && index !== focus\n              ? \"block highlight\"\n              : index === focus\n              ? \"block focus\"\n              : \"block\"\n          }\n          value={num === \"0\" ? \"\" : num}\n          onChange={(e) => userInput(e, index)}\n          onClick={() => handleFocus(index)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default React.memo(Block);","import React from \"react\";\nimport Block from \"./Block\";\n\nconst Game = ({\n  grid,\n  originalGrid,\n  userInput,\n  focus,\n  handleFocus,\n  noteModeOn,\n  noteArr,\n  highlightNum,\n  helpMode,\n}) => {\n  return (\n    <div className=\"grid\">\n      {grid.map((num, i) => (\n        <Block\n          key={i}\n          num={num}\n          original={originalGrid[i]}\n          index={i}\n          userInput={userInput}\n          focus={focus}\n          handleFocus={handleFocus}\n          noteModeOn={noteModeOn}\n          noteArr={noteArr[i]}\n          highlightNum={highlightNum}\n          helpMode={helpMode}\n          grid={grid}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(Game);\n","import React from 'react';\n\nconst Timer = ({timer}) => {\n    return (<div className=\"timer\">{timer}</div>)\n}\n\nexport default Timer;","import React from \"react\";\nimport { isBrowser } from \"react-device-detect\";\nimport Timer from \"./Timer\";\n\nconst Menu = ({\n  showModal,\n  handleSubmit,\n  handleDifficulty,\n  timer,\n  isFullGrid,\n  error,\n  undo,\n  isPlaying,\n  gridHistory,\n  noteModeOn,\n  handleNoteMode,\n  toggleHelpMode,\n}) => {\n  return (\n    <nav className=\"menu\">\n      <h1 className=\"title\">Sudoku</h1>\n      <div>\n        <p className=\"subtitle\">Timer:</p>\n        <Timer timer={timer} />\n      </div>\n      <div>\n        <p className=\"subtitle\">Difficulty:</p>\n        <select className=\"diffculty\" onChange={handleDifficulty}>\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n        </select>\n      </div>\n      <button className=\"btn btn-start active\" onClick={showModal}>\n        New Game\n      </button>\n      <div>\n        <label className=\"help-label\">\n          {\" \"}\n          Help Mode:\n          <input\n            type=\"checkbox\"\n            className=\"help-checkbox\"\n            onChange={toggleHelpMode}\n          />\n        </label>\n      </div>\n\n      <div className=\"btn-small\">\n        <button\n          className={\n            isPlaying && gridHistory.length > 1\n              ? \"btn btn-undo active\"\n              : \"btn btn-undo\"\n          }\n          onClick={undo}\n        >\n          Undo\n        </button>\n\n        <button\n          className={\n            noteModeOn && isPlaying && isBrowser\n              ? \"btn btn-notes\"\n              : isPlaying && isBrowser\n              ? \"btn active\"\n              : \"btn\"\n          }\n          onClick={handleNoteMode}\n        >\n          {noteModeOn && isBrowser ? \"Note: ON\" : \"Note: OFF\"}\n        </button>\n      </div>\n\n      <div className=\"note-message\">\n        <strong>IN NOTE MODE:</strong>{\" \"}\n        {isBrowser\n          ? \"type numbers 1-9 to add and remove from cell.\"\n          : \"Note mode is not available on mobile.\"}\n      </div>\n\n      <button\n        className={isFullGrid ? \"btn btn-submit active\" : \"btn btn-submit\"}\n        disabled={isFullGrid ? false : true}\n        onClick={handleSubmit}\n      >\n        Submit\n      </button>\n      <p className={error ? \"error show\" : \"error\"}>Oops! Try again</p>\n    </nav>\n  );\n};\n\nexport default React.memo(Menu);\n","import React from \"react\";\n\nconst Won = ({ timer, startGame, showWonModal, hideModal }) => {\n  return (\n    <div className={showWonModal ? \"show modal\" : \"modal\"}>\n      <div className=\"modal-content\">\n        <p>You've Won!</p>\n        <h4>Your time was {timer} </h4>\n        <button className=\"btn btn-newgame\" onClick={startGame}>\n          Play Again\n        </button>\n        <button className=\"modal-close\" onClick={hideModal}>\n          x\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Won;","export const Winners = [\n  [0, 1, 2, 3, 4, 5, 6, 7, 8],\n  [9, 10, 11, 12, 13, 14, 15, 16, 17],\n  [18, 19, 20, 21, 22, 23, 24, 25, 26],\n  [27, 28, 29, 30, 31, 32, 33, 34, 35],\n  [36, 37, 38, 39, 40, 41, 42, 43, 44],\n  [45, 46, 47, 48, 49, 50, 51, 52, 53],\n  [54, 55, 56, 57, 58, 59, 60, 61, 62],\n  [63, 64, 65, 66, 67, 68, 69, 70, 71],\n  [72, 73, 74, 75, 76, 77, 78, 79, 80],\n  [0, 9, 18, 27, 36, 45, 54, 63, 72],\n  [1, 10, 19, 28, 37, 46, 55, 64, 73],\n  [2, 11, 20, 29, 38, 47, 56, 65, 74],\n  [3, 12, 21, 30, 39, 48, 57, 66, 75],\n  [4, 13, 22, 31, 40, 49, 58, 67, 76],\n  [5, 14, 23, 32, 41, 50, 59, 68, 77],\n  [6, 15, 24, 33, 42, 51, 60, 69, 78],\n  [7, 16, 25, 34, 43, 52, 61, 70, 79],\n  [8, 17, 26, 35, 44, 53, 62, 71, 80],\n  [0, 1, 2, 9, 10, 11, 18, 19, 20],\n  [3, 4, 5, 12, 13, 14, 21, 22, 23],\n  [6, 7, 8, 15, 16, 17, 24, 25, 26],\n  [27, 28, 29, 36, 37, 38, 45, 46, 47],\n  [30, 31, 32, 39, 40, 41, 48, 49, 50],\n  [33, 34, 35, 42, 43, 44, 51, 52, 53],\n  [54, 55, 56, 63, 64, 65, 72, 73, 74],\n  [57, 58, 59, 66, 67, 68, 75, 76, 77],\n  [60, 61, 62, 69, 70, 71, 78, 79, 80],\n];\n","import React from \"react\";\nimport { BrowserView } from \"react-device-detect\";\n\nconst NewGame = ({ startGame, showNewGameModal, hideModal }) => {\n  return (\n    <div className={showNewGameModal ? \"modal show\" : \"modal\"}>\n      <div className=\"modal-content\">\n        <ol>\n          <h3 className=\"modal-title\">HOW TO PLAY SUDOKU</h3>\n          <li>\n            Fill in the numbers 1-9 exactly once in every row, column and 3x3\n            block area.\n          </li>\n          <BrowserView>\n            <h3 className=\"modal-title\">KEYBOARD CONTROLS:</h3>\n            <li>\n              Use <strong>up</strong>, <strong>down</strong>,{\" \"}\n              <strong>left</strong> & <strong>right</strong> arrow keys to move\n              between cells.\n            </li>\n            <li>\n              Press the <strong>spacebar</strong> key to toggle note mode on and\n              off.\n            </li>\n            <li>\n              Press the <strong>R</strong> key erase all notes from a cell.\n            </li>\n          </BrowserView>\n        </ol>\n        <button className=\"btn btn-newgame\" onClick={startGame}>\n          Start\n        </button>\n        <button className=\"modal-close\" onClick={hideModal}>\n          x\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewGame;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Game from \"./component/Game\";\nimport Menu from \"./component/Menu\";\nimport Won from \"./component/Won\";\nimport { Winners } from \"./component/Combinations\";\nimport NewGame from \"./component/NewGame\";\n\nconst App = () => {\n  const [originalGrid, setOrginalGrid] = useState(Array(81).fill(\"0\"));\n  const [gridHistory, setGridHistory] = useState([]);\n  const [grid, setGrid] = useState(Array(81).fill(\"\"));\n  const [difficulty, setDifficulty] = useState(\"easy\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timer, setTimer] = useState(\"00:00\");\n  const [isFullGrid, setIsFullGrid] = useState(false);\n  const [error, setError] = useState(false);\n  const [focus, setFocus] = useState(null);\n  const [noteModeOn, setNoteModeOn] = useState(false);\n  const [showWonModal, setShowWonModal] = useState(false);\n  const [showNewGameModal, setShowNewGameModal] = useState(false);\n  const [highlightNum, setHighlightNum] = useState([]);\n  const [helpMode, setHelpMode] = useState(false);\n  const [noteArr, setNoteArr] = useState(\n    Array(81)\n      .fill([])\n      .map((arr, i) => [i, []])\n  );\n\n  const prevFocusRef = useRef();\n  const timerRef = useRef();\n\n  useEffect(() => {\n    prevFocusRef.current = focus;\n  });\n\n  // RESET GRID & STARTING STATES\n  const startGame = () => {\n    setShowNewGameModal(false);\n    setShowWonModal(false);\n    document.querySelector(\".btn-start\").blur();\n    setIsPlaying(false);\n    setNoteModeOn(false);\n    setFocus(null);\n    setNoteArr(\n      Array(81)\n        .fill([])\n        .map((arr, i) => [i, []])\n    );\n    getNewPuzzle();\n    setIsFullGrid(false);\n  };\n\n  // API CALL TO FETCH NEW SUDOKU PUZZLE\n  const getNewPuzzle = () => {\n    const api = `https://sugoku.herokuapp.com/board?difficulty=${difficulty}`;\n    fetch(api)\n      .then((response) => response.json())\n      .then((data) => {\n        let grid = data.board.join(\",\").split(\",\");\n        setGrid(grid);\n        setOrginalGrid(grid);\n        setGridHistory([grid]);\n        setIsPlaying(true);\n      });\n  };\n\n  // CHECK IF PUZZLE IS COMPLETE\n  useEffect(() => {\n    let emptyBlock = grid.filter((block) => block === \"0\" || block === \"\")\n      .length;\n    if (emptyBlock === 0 && isPlaying) {\n      setIsFullGrid(true);\n    } else {\n      setIsFullGrid(false);\n    }\n  }, [grid]);\n\n  // CHECK IF PLAYER HAS WON\n  const handleSumbit = () => {\n    let noMatch = false;\n    for (let arr of Winners) {\n      let combination = [];\n      for (let i = 0; i < 9; i++) {\n        combination.push(grid[arr[i]]);\n      }\n      combination = combination.sort().join(\"\");\n      if (combination !== \"123456789\") {\n        noMatch = true;\n        setError(true);\n      }\n    }\n\n    // IF WON - FREEZE TIMER AND SHOW WON MODAL\n    if (!noMatch) {\n      setError(false);\n      setShowWonModal(true);\n      setIsPlaying(false);\n    }\n  };\n\n  // START TIMER WHEN GAME STARTS AND RESET WHEN PLAYER HAS WON\n  useEffect(() => {\n    if (showWonModal) {\n      clearInterval(timerRef.current);\n    } else if (isPlaying) {\n      let seconds = 0;\n      timerRef.current = setInterval(() => {\n        seconds += 1;\n        formatTime(seconds);\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(timerRef.current);\n    };\n  }, [isPlaying, showWonModal]);\n\n  // FORMAT TIME TO 00:00\n  const formatTime = (seconds) => {\n    let mins;\n    let sec = 0;\n    if (seconds >= 60) {\n      mins = Math.floor(seconds / 60);\n      sec = seconds % 60;\n      mins = mins === 0 ? \"00\" : mins <= 9 ? `0${mins}` : mins;\n    } else {\n      sec = seconds;\n      mins = \"00\";\n    }\n    sec = sec === 0 ? \"00\" : sec <= 9 ? `0${sec}` : sec;\n    let time = `${mins}:${sec}`;\n    setTimer(time);\n  };\n\n  // ADD NUMBER INPUT TO GRID\n  const userInput = (e, index) => {\n    const input = Number(e.target.value);\n    let gridCopy = [...grid];\n    if (input >= 1 || input <= 9) {\n      gridCopy[index] = e.target.value;\n      setGrid(gridCopy);\n      let gridHistoryCopy = gridHistory;\n      gridHistoryCopy.push(gridCopy);\n      setGridHistory(gridHistoryCopy);\n    }\n    verifyNum(e.target.value);\n    return e.target.value;\n  };\n\n  // CHECK IF NUMBER IS ALREADY IN ROW, COL & LOCAL BLOCK\n  const verifyNum = (enteredNum) => {\n    let combinations = [];\n    for (let arr of Winners) {\n      if (arr.includes(focus)) {\n        combinations.push(arr);\n      }\n    }\n\n    const duplicates = [];\n    for (let arr of combinations) {\n      for (let i = 0; i < 9; i++) {\n        if (grid[arr[i]] === enteredNum && !duplicates.includes(arr[i])) {\n          duplicates.push(arr[i]);\n        }\n      }\n    }\n    setHighlightNum(duplicates);\n  };\n\n  // RE-CHECK VERIFYNUM FUNC WHEN HELP MODE IS TURNED ON\n  useEffect(() => {\n    if (helpMode) verifyNum(grid[focus]);\n  }, [helpMode, grid]);\n\n  // EVENT LISTENERS FOR KEY PRESS\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeypress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeypress);\n    };\n  });\n\n  // CHECKS KEY IS PRESSED AND CALLS REVEVANT FUNCTION\n  const handleKeypress = (e) => {\n    // UP, DOWN, LEFT AND RIGHT ARROW KEYS\n    if (e.keyCode >= 37 && e.keyCode <= 40) {\n      handleSetFocus(e.keyCode);\n    }\n    // SPACEBAR KEY (TOGGLE NOTE MODE ON/OFF)\n    else if (isPlaying && e.keyCode === 32) {\n      setNoteModeOn(!noteModeOn);\n    }\n    // 1-9 NUBMER KEYS\n    else if (e.keyCode >= 49 && e.keyCode <= 57 && focus >= 0 && noteModeOn) {\n      handleNote(e.keyCode);\n    }\n    // R KEY\n    else if (e.keyCode === 82) {\n      clearNotes();\n    } else {\n      return;\n    }\n  };\n\n  // CLEAR ALL NOTES FROM ACTIVE CELL\n  const clearNotes = () => {\n    let noteArrayCopy = noteArr;\n    noteArrayCopy[focus][1] = [];\n    setNoteArr(noteArrayCopy);\n  };\n\n  // ADDS AND REMOVE NUMBER FROM NOTES ARRAY FOR THE FOCUSED BLOCK\n  const handleNote = (key) => {\n    let input = (key - 48).toString();\n    let noteArrayCopy = noteArr;\n\n    if (noteArrayCopy[focus][1].includes(input)) {\n      noteArrayCopy[focus][1] = noteArrayCopy[focus][1]\n        .join(\"\")\n        .replace(input, \"\")\n        .split(\"\");\n    } else {\n      noteArrayCopy[focus][1].push(input);\n    }\n    setNoteArr(noteArrayCopy);\n  };\n\n  // UPDATE FOCUS STATE WHEN UP, DOWN, LEFT AND ARROW KEYS ARE PRESSED\n  const handleSetFocus = (key) => {\n    let focusCopy = focus;\n    if (key === 39) {\n      focusCopy += 1;\n    } else if (key === 40) {\n      focusCopy += 9;\n    } else if (key === 37) {\n      focusCopy -= 1;\n    } else if (key === 38) {\n      focusCopy -= 9;\n    }\n\n    if (focusCopy > 80 || focusCopy < 0) return;\n    setFocus(focusCopy);\n\n    let focusElem = document.getElementById(focusCopy);\n\n    if (\n      focusElem.classList.contains(\"block\") ||\n      focusElem.classList.contains(\"note\")\n    ) {\n      focusElem.focus();\n    } else {\n      document.getElementById(prevFocusRef.current).blur();\n    }\n  };\n\n  // REFOCUS CURSOR ON CURRENT INPUT BLOCK AFTER SWITCHING OFF NOTE MODE\n  useEffect(() => {\n    if (noteModeOn || !focus) return;\n    let focusCopy = focus;\n    let focusElem = document.getElementById(focusCopy);\n    setFocus(focusCopy);\n\n    if (focusElem.classList.contains(\"block\")) {\n      focusElem.focus();\n    } else {\n      document.getElementById(prevFocusRef.current).blur();\n    }\n  }, [noteModeOn]);\n\n  // UNDO - REVERT GRID TO LAST STATE\n  const handleUndo = () => {\n    let lastStep = gridHistory.length - 2;\n    if (isPlaying && lastStep >= 0) {\n      setGrid(gridHistory[lastStep]);\n      let updateGridHistory = gridHistory.splice(0, gridHistory.length - 1);\n      setGridHistory(updateGridHistory);\n    }\n  };\n\n  // TOGGLE NOTE MODE ON AND OFF\n  const handleNoteMode = () => {\n    if (isPlaying) {\n      setNoteModeOn(!noteModeOn);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"app\">\n        <Game\n          grid={grid}\n          originalGrid={originalGrid}\n          userInput={userInput}\n          focus={focus}\n          handleFocus={(index) => setFocus(index)}\n          noteModeOn={noteModeOn}\n          noteArr={noteArr}\n          highlightNum={highlightNum}\n          helpMode={helpMode}\n        />\n        <Menu\n          showModal={() => setShowNewGameModal(true)}\n          handleDifficulty={(e) => setDifficulty(e.target.value)}\n          timer={timer}\n          isFullGrid={isFullGrid}\n          handleSubmit={handleSumbit}\n          error={error}\n          undo={handleUndo}\n          isPlaying={isPlaying}\n          handleNoteMode={handleNoteMode}\n          noteModeOn={noteModeOn}\n          gridHistory={gridHistory}\n          toggleHelpMode={() => setHelpMode(!helpMode)}\n        />\n      </div>\n      <Won\n        showWonModal={showWonModal}\n        startGame={startGame}\n        timer={timer}\n        hideModal={() => setShowWonModal(false)}\n      />\n      <NewGame\n        startGame={startGame}\n        hideModal={() => setShowNewGameModal(false)}\n        showNewGameModal={showNewGameModal}\n      />\n    </>\n  );\n};\n\nexport default React.memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}